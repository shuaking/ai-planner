# Environment variables example
# Copy this file to .env or .env.local and adjust the values

# Required
OPENAI_API_KEY=sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
NEXTAUTH_SECRET=replace-with-a-random-base64-32
NEXTAUTH_URL=http://localhost:3000
SUPABASE_URL=https://YOUR_PROJECT_REF.supabase.co
SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.YOUR_ANON_KEY
EMAIL_FROM=noreply@example.com
# Configure SMTP server (e.g., Supabase SMTP credentials)
EMAIL_SERVER_HOST=smtp.YOUR_SUPABASE_HOST
EMAIL_SERVER_PORT=587
EMAIL_SERVER_USER=YOUR_SUPABASE_SMTP_USERNAME
EMAIL_SERVER_PASSWORD=YOUR_SUPABASE_SMTP_PASSWORD

# Optional
# Used for server-only admin tasks; never expose to the client.
SUPABASE_SERVICE_ROLE=
# Required only if you plan to send email with Resend.
RESEND_API_KEY=

# Database (used by Prisma)
# Supabase Postgres connection string example:
# DATABASE_URL="postgresql://postgres:[YOUR_PASSWORD]@db.[PROJECT_REF].supabase.co:5432/postgres"
# For local development you can run Postgres locally or use Supabase locally.
# If you prefer SQLite locally, switch the provider in apps/web/prisma/schema.prisma and use:
# DATABASE_URL="file:./prisma/dev.db"
DATABASE_URL="postgresql://postgres:postgres@localhost:5432/postgres"

# One-time setup token used to protect the /api/admin/setup endpoint
# Generate a strong random string and set it in your Vercel project env vars.
SETUP_TOKEN=replace-with-strong-token

# Region notes:
# - Choose a Supabase project region close to your Vercel deployment region to reduce latency.
# - In production on Vercel set NEXTAUTH_URL to your deployed URL, e.g. https://your-app.vercel.app
